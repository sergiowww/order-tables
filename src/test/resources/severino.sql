-- MySQL Script generated by MySQL Workbench
-- Tue Apr 28 09:54:27 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema severino
-- -----------------------------------------------------
-- Severino - Controle de Entrada e Saída de Visitantes

-- -----------------------------------------------------
-- Schema severino
--
-- Severino - Controle de Entrada e Saída de Visitantes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `severino` DEFAULT CHARACTER SET latin1 ;
USE `severino` ;

-- -----------------------------------------------------
-- Table `severino`.`visitante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`visitante` (
  `id_visitante` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(200) NOT NULL,
  `documento` VARCHAR(20) NOT NULL,
  `orgao_emissor` VARCHAR(45) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  `profissao` VARCHAR(120) NULL,
  `telefone` CHAR(11) NULL,
  `telefone_alternativo` CHAR(11) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id_visitante`),
  UNIQUE INDEX `documento_unique_idx` (`documento` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `severino`.`organizacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`organizacao` (
  `id_organizacao` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_organizacao`),
  UNIQUE INDEX `nome_unique_idx` (`nome` ASC))
ENGINE = InnoDB
COMMENT = 'Regionais do órgão';


-- -----------------------------------------------------
-- Table `severino`.`local`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`local` (
  `id_local` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL COMMENT 'Informação advinda do campo distinguishedName do LDAP',
  `id_organizacao` INT NOT NULL,
  PRIMARY KEY (`id_local`),
  INDEX `fk_local_organizacao_idx` (`id_organizacao` ASC),
  UNIQUE INDEX `nome_organizacao_unique_idx` (`nome` ASC, `id_organizacao` ASC),
  CONSTRAINT `fk_local_organizacao`
    FOREIGN KEY (`id_organizacao`)
    REFERENCES `severino`.`organizacao` (`id_organizacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Instalação física, edifício ou entrada';


-- -----------------------------------------------------
-- Table `severino`.`setor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`setor` (
  `id_setor` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `andar` SMALLINT NULL,
  `sala` VARCHAR(5) NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_setor`),
  INDEX `fk_setor_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_setor_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `severino`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`usuario` (
  `id_usuario` VARCHAR(20) NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_usuario_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Usuários da aplicação';


-- -----------------------------------------------------
-- Table `severino`.`empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`empresa` (
  `id_empresa` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_empresa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `severino`.`visita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`visita` (
  `id_visita` INT NOT NULL AUTO_INCREMENT,
  `entrada` DATETIME NOT NULL,
  `saida` DATETIME NULL,
  `nome_procurado` VARCHAR(45) NULL,
  `setor_procurado` VARCHAR(200) NULL,
  `id_visitante` INT NOT NULL,
  `id_setor` INT NOT NULL,
  `id_usuario` VARCHAR(20) NOT NULL,
  `id_empresa` INT NULL,
  `data_hora_cadastro` TIMESTAMP NOT NULL DEFAULT current_timestamp,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_visita`),
  INDEX `fk_visita_visitante_idx` (`id_visitante` ASC),
  INDEX `fk_visita_setor_idx` (`id_setor` ASC),
  INDEX `fk_visita_usuario_idx` (`id_usuario` ASC),
  INDEX `fk_visita_empresa_idx` (`id_empresa` ASC),
  INDEX `fk_visita_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_visita_visitante`
    FOREIGN KEY (`id_visitante`)
    REFERENCES `severino`.`visitante` (`id_visitante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visita_setor`
    FOREIGN KEY (`id_setor`)
    REFERENCES `severino`.`setor` (`id_setor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visita_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `severino`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visita_empresa`
    FOREIGN KEY (`id_empresa`)
    REFERENCES `severino`.`empresa` (`id_empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_visita_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `severino`.`motorista`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`motorista` (
  `id_motorista` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(200) NOT NULL,
  `tipo` TINYINT NOT NULL COMMENT 'Indica se é técnico de transporte, servidor ou procurador',
  `matricula` CHAR(9) NOT NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_motorista`),
  INDEX `fk_motorista_local_idx` (`id_local` ASC),
  UNIQUE INDEX `matricula_unique_idx` (`matricula` ASC),
  CONSTRAINT `fk_motorista_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Motorista ou técnico de transporte do mpt';


-- -----------------------------------------------------
-- Table `severino`.`veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`veiculo` (
  `placa` CHAR(7) NOT NULL,
  `marca` VARCHAR(30) NOT NULL,
  `modelo` VARCHAR(30) NOT NULL,
  `cor` VARCHAR(10) NOT NULL,
  `viatura_mp` TINYINT(1) NOT NULL DEFAULT 0,
  `id_motorista` INT NULL,
  `ativo` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Indica se o veículo deve ser apresentado como uma opção de escolha',
  `id_local` INT NOT NULL,
  PRIMARY KEY (`placa`),
  INDEX `fk_veiculo_motorista_idx` (`id_motorista` ASC),
  INDEX `fk_veiculo_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_veiculo_motorista`
    FOREIGN KEY (`id_motorista`)
    REFERENCES `severino`.`motorista` (`id_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_veiculo_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Veículo que adentrou a garagem ou viatura do MP';


-- -----------------------------------------------------
-- Table `severino`.`acesso_garagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`acesso_garagem` (
  `id_acesso_garagem` INT NOT NULL AUTO_INCREMENT,
  `entrada` DATETIME NOT NULL,
  `saida` DATETIME NULL,
  `data_hora_cadastro` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `anotacao` VARCHAR(400) NULL,
  `id_motorista` INT NULL,
  `id_visita` INT NULL,
  `placa` CHAR(7) NOT NULL,
  `id_usuario` VARCHAR(20) NOT NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_acesso_garagem`),
  INDEX `fk_acesso_garagem_motorista_idx` (`id_motorista` ASC),
  INDEX `fk_acesso_garagem_visita_idx` (`id_visita` ASC),
  INDEX `fk_acesso_garagem_veiculo_idx` (`placa` ASC),
  INDEX `fk_acesso_garagem_usuario_idx` (`id_usuario` ASC),
  INDEX `fk_acesso_garagem_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_acesso_garagem_motorista`
    FOREIGN KEY (`id_motorista`)
    REFERENCES `severino`.`motorista` (`id_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_garagem_visita`
    FOREIGN KEY (`id_visita`)
    REFERENCES `severino`.`visita` (`id_visita`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_garagem_veiculo`
    FOREIGN KEY (`placa`)
    REFERENCES `severino`.`veiculo` (`placa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_garagem_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `severino`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_garagem_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Servidores, membros ou visitantes que acessam a garagem com seus veículos';


-- -----------------------------------------------------
-- Table `severino`.`controle_motorista`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`controle_motorista` (
  `id_controle_motorista` INT NOT NULL AUTO_INCREMENT,
  `id_motorista` INT NOT NULL,
  `data_hora` DATETIME NOT NULL,
  `fluxo` TINYINT NOT NULL COMMENT 'Indica se o foi uma entrada ou saída do motorista',
  `id_local` INT NOT NULL,
  INDEX `fk_controle_motorista_motorista_idx` (`id_motorista` ASC),
  PRIMARY KEY (`id_controle_motorista`),
  INDEX `fk_controle_motorista_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_controle_motorista_motorista`
    FOREIGN KEY (`id_motorista`)
    REFERENCES `severino`.`motorista` (`id_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_controle_motorista_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Controle de ponto do motorista ou técnico de transporte';


-- -----------------------------------------------------
-- Table `severino`.`viagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`viagem` (
  `id_viagem` INT NOT NULL AUTO_INCREMENT,
  `anotacao` VARCHAR(400) NULL,
  `data_hora_cadastro` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_motorista` INT NOT NULL,
  `placa` CHAR(7) NULL,
  `id_usuario` VARCHAR(20) NOT NULL,
  `id_controle_saida` INT NOT NULL,
  `id_controle_retorno` INT NULL,
  `id_local` INT NOT NULL,
  PRIMARY KEY (`id_viagem`),
  INDEX `fk_viagem_motorista_idx` (`id_motorista` ASC),
  INDEX `fk_viagem_veiculo_idx` (`placa` ASC),
  INDEX `fk_viagem_usuario_idx` (`id_usuario` ASC),
  INDEX `fk_viagem_controle_motorista_saida_idx` (`id_controle_saida` ASC),
  INDEX `fk_viagem_controle_motorista_retorno_idx` (`id_controle_retorno` ASC),
  INDEX `fk_viagem_local_idx` (`id_local` ASC),
  CONSTRAINT `fk_viagem_motorista`
    FOREIGN KEY (`id_motorista`)
    REFERENCES `severino`.`motorista` (`id_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viagem_veiculo`
    FOREIGN KEY (`placa`)
    REFERENCES `severino`.`veiculo` (`placa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viagem_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `severino`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viagem_controle_motorista_saida`
    FOREIGN KEY (`id_controle_saida`)
    REFERENCES `severino`.`controle_motorista` (`id_controle_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viagem_controle_motorista_retorno`
    FOREIGN KEY (`id_controle_retorno`)
    REFERENCES `severino`.`controle_motorista` (`id_controle_motorista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_viagem_local`
    FOREIGN KEY (`id_local`)
    REFERENCES `severino`.`local` (`id_local`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro de viagens a serviço';


-- -----------------------------------------------------
-- Table `severino`.`passageiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`passageiro` (
  `nome` VARCHAR(200) NOT NULL,
  `matricula` VARCHAR(9) NULL,
  `id_viagem` INT NOT NULL,
  PRIMARY KEY (`nome`, `id_viagem`),
  INDEX `fk_passageiro_viagem_idx` (`id_viagem` ASC),
  CONSTRAINT `fk_passageiro_viagem`
    FOREIGN KEY (`id_viagem`)
    REFERENCES `severino`.`viagem` (`id_viagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `severino`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `severino`.`endereco` (
  `id_visitante` INT NOT NULL,
  `cep` CHAR(8) NULL,
  `municipio` VARCHAR(80) NOT NULL,
  `bairro` VARCHAR(80) NOT NULL,
  `complemento` VARCHAR(50) NULL,
  `numero` VARCHAR(10) NULL,
  `uf` CHAR(2) NOT NULL,
  `referencia` VARCHAR(30) NULL,
  `logradouro` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id_visitante`),
  CONSTRAINT `fk_endereco_visitante`
    FOREIGN KEY (`id_visitante`)
    REFERENCES `severino`.`visitante` (`id_visitante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'ces' IDENTIFIED BY '123321';

GRANT ALL ON `severino`.* TO 'ces';
GRANT SELECT, INSERT, TRIGGER ON TABLE `severino`.* TO 'ces';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `severino`.* TO 'ces';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `severino`.`visitante`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`visitante` (`id_visitante`, `nome`, `documento`, `orgao_emissor`, `uf`, `profissao`, `telefone`, `telefone_alternativo`, `email`) VALUES (1, 'JOÃO DO CAMINHÃO', '12345', 'SSP', 'DF', 'Caminhoneiro', '61123441234', '6112341234', 'joao.caminhao@gmail.com');
INSERT INTO `severino`.`visitante` (`id_visitante`, `nome`, `documento`, `orgao_emissor`, `uf`, `profissao`, `telefone`, `telefone_alternativo`, `email`) VALUES (2, 'Mulher Maravilha', '25252525', 'SSP', 'GO', 'Heroína', '61432143218', '6243214567', 'mulher.maravilha@hotmail.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`organizacao`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`organizacao` (`id_organizacao`, `nome`) VALUES (1, 'organizacão organizada');

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`local`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`local` (`id_local`, `nome`, `id_organizacao`) VALUES (1, 'Local Organizado', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`setor`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`setor` (`id_setor`, `nome`, `andar`, `sala`, `id_local`) VALUES (1, 'Setor dos Procurados 1', 1, '202', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`usuario`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`usuario` (`id_usuario`, `nome`, `id_local`) VALUES ('admin', 'Administrador', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`empresa`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`empresa` (`id_empresa`, `nome`) VALUES (1, 'Empresa 1');

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`visita`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`visita` (`id_visita`, `entrada`, `saida`, `nome_procurado`, `setor_procurado`, `id_visitante`, `id_setor`, `id_usuario`, `id_empresa`, `data_hora_cadastro`, `id_local`) VALUES (1, '2019-10-05 10:45:00', '2019-10-05 11:00:00', 'José do Miquelé', 'Seção dos procurados', 1, 1, 'admin', 1, '2019-10-05 10:45:00', 1);
INSERT INTO `severino`.`visita` (`id_visita`, `entrada`, `saida`, `nome_procurado`, `setor_procurado`, `id_visitante`, `id_setor`, `id_usuario`, `id_empresa`, `data_hora_cadastro`, `id_local`) VALUES (2, '2017-10-05 13:23:00', '2017-10-05 14:33:00', 'Maria Preá', 'Seção dos nadadores', 2, 1, 'admin', NULL, DEFAULT, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`motorista`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`motorista` (`id_motorista`, `nome`, `tipo`, `matricula`, `id_local`) VALUES (1, 'Ghost Rider', 0, '1234', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`veiculo`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`veiculo` (`placa`, `marca`, `modelo`, `cor`, `viatura_mp`, `id_motorista`, `ativo`, `id_local`) VALUES ('jds8623', 'GM', 'Maverick', 'Amarelo', true, 1, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`acesso_garagem`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`acesso_garagem` (`id_acesso_garagem`, `entrada`, `saida`, `data_hora_cadastro`, `anotacao`, `id_motorista`, `id_visita`, `placa`, `id_usuario`, `id_local`) VALUES (1, '2018-10-05 10:20:12', '2018-10-05 10:40:00', '2018-10-05 10:20:12', 'chegou e saiu', 1, 2, 'jds8623', 'admin', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`controle_motorista`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`controle_motorista` (`id_controle_motorista`, `id_motorista`, `data_hora`, `fluxo`, `id_local`) VALUES (1, 1, '2016-10-04 12:32:22', 0, 1);
INSERT INTO `severino`.`controle_motorista` (`id_controle_motorista`, `id_motorista`, `data_hora`, `fluxo`, `id_local`) VALUES (2, 1, '2016-10-04 14:32:22', 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`viagem`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`viagem` (`id_viagem`, `anotacao`, `data_hora_cadastro`, `id_motorista`, `placa`, `id_usuario`, `id_controle_saida`, `id_controle_retorno`, `id_local`) VALUES (1, 'foi dá um rolé', '2016-10-05 10:21:00', 1, 'jds8623', 'admin', 1, 2, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`passageiro`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`passageiro` (`nome`, `matricula`, `id_viagem`) VALUES ('Clementina', '1234', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `severino`.`endereco`
-- -----------------------------------------------------
START TRANSACTION;
USE `severino`;
INSERT INTO `severino`.`endereco` (`id_visitante`, `cep`, `municipio`, `bairro`, `complemento`, `numero`, `uf`, `referencia`, `logradouro`) VALUES (1, '12345321', 'Brasília', 'Asa Sul', 'APTO 1404', '3', 'DF', 'COND. ALVORADA', 'RUA 10');

COMMIT;

